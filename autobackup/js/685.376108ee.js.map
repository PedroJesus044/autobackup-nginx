{"version":3,"file":"js/685.376108ee.js","mappings":"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","sources":["webpack://frontend-controladora-js/./src/services/BackupTracesDataService.js","webpack://frontend-controladora-js/./node_modules/@kurkle/color/dist/color.esm.js","webpack://frontend-controladora-js/./node_modules/chart.js/dist/chunks/helpers.segment.js","webpack://frontend-controladora-js/./node_modules/chart.js/dist/chart.js","webpack://frontend-controladora-js/./node_modules/vue-chartjs/dist/index.js"],"sourcesContent":["import http from \"../http-common\";\n\nclass TutorialDataService {\n  getAll() {\n    return http.get(\"/backups\");\n  }\n\n  get(id) {\n    return http.get(`/backups/${id}`);\n  }\n\n  create(data) {\n    return http.post(\"/backups\", data);\n  }\n\n  update(id, data) {\n    return http.put(`/backups/${id}`, data);\n  }\n\n  delete(id) {\n    return http.delete(`/backups/${id}`);\n  }\n\n  deleteAll() {\n    return http.delete(`/tutorials`);\n  }\n\n  backupHistory(data){\n    return http.post(\"/backup_traces/retrieve_limit\", data);\n  }\n\n  historyFile(data){\n    return http.get(\"/file_traces/historyfile\", data);\n  }\n\n  generalStatus(){\n    return http.get(\"/backup_traces/last_status\");\n  }\n}\n\nexport default new TutorialDataService();\n","/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.4.3\n * https://www.chartjs.org\n * (c) 2024 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    if (!ctx && !canvas) {\n        return;\n    }\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = canvas && _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        if (_isDomSupported()) {\n            window.addEventListener('test', null, options);\n            window.removeEventListener('test', null, options);\n        }\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.segment.js.map\n","/*!\n * Chart.js v4.4.3\n * https://www.chartjs.org\n * (c) 2024 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data, meta) {\n    const { iScale , vScale  } = meta;\n    const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n    const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            [iAxisKey]: key,\n            [vAxisKey]: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            const meta = this._cachedMeta;\n            this._data = convertObjectDataToArray(data, meta);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const skipNull = (meta)=>{\n            const parsed = meta.controller.getParsed(dataIndex);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    if (node) {\n        node.addEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction removeListener(chart, type, listener) {\n    if (chart && chart.canvas) {\n        chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = canvas && _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.4.3\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resize(width, height);\n            this._resizeBeforeDraw = null;\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta, this.chartArea);\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements))) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let xSet = new Set();\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                xSet.add(pos.x);\n                y += pos.y;\n                ++count;\n            }\n        }\n        const xAverage = [\n            ...xSet\n        ].reduce((a, b)=>a + b) / xSet.size;\n        return {\n            x: xAverage,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0 || index === 0 && this.min < 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && this.min >= 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","import { Chart as Chart$1, BarController, DoughnutController, LineController, PieController, PolarAreaController, RadarController, BubbleController, ScatterController } from 'chart.js';\nimport { version, isProxy, toRaw, defineComponent, ref, shallowRef, onMounted, onUnmounted, watch, nextTick, h } from 'vue';\n\nconst CommonProps = {\n    data: {\n        type: Object,\n        required: true\n    },\n    options: {\n        type: Object,\n        default: ()=>({})\n    },\n    plugins: {\n        type: Array,\n        default: ()=>[]\n    },\n    datasetIdKey: {\n        type: String,\n        default: \"label\"\n    },\n    updateMode: {\n        type: String,\n        default: undefined\n    }\n};\nconst A11yProps = {\n    ariaLabel: {\n        type: String\n    },\n    ariaDescribedby: {\n        type: String\n    }\n};\nconst Props = {\n    type: {\n        type: String,\n        required: true\n    },\n    destroyDelay: {\n        type: Number,\n        default: 0 // No delay by default\n    },\n    ...CommonProps,\n    ...A11yProps\n};\n\nconst compatProps = version[0] === \"2\" ? (internals, props)=>Object.assign(internals, {\n        attrs: props\n    }) : (internals, props)=>Object.assign(internals, props);\nfunction toRawIfProxy(obj) {\n    return isProxy(obj) ? toRaw(obj) : obj;\n}\nfunction cloneProxy(obj) {\n    let src = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : obj;\n    return isProxy(src) ? new Proxy(obj, {}) : obj;\n}\nfunction setOptions(chart, nextOptions) {\n    const options = chart.options;\n    if (options && nextOptions) {\n        Object.assign(options, nextOptions);\n    }\n}\nfunction setLabels(currentData, nextLabels) {\n    currentData.labels = nextLabels;\n}\nfunction setDatasets(currentData, nextDatasets, datasetIdKey) {\n    const addedDatasets = [];\n    currentData.datasets = nextDatasets.map((nextDataset)=>{\n        // given the new set, find it's current match\n        const currentDataset = currentData.datasets.find((dataset)=>dataset[datasetIdKey] === nextDataset[datasetIdKey]);\n        // There is no original to update, so simply add new one\n        if (!currentDataset || !nextDataset.data || addedDatasets.includes(currentDataset)) {\n            return {\n                ...nextDataset\n            };\n        }\n        addedDatasets.push(currentDataset);\n        Object.assign(currentDataset, nextDataset);\n        return currentDataset;\n    });\n}\nfunction cloneData(data, datasetIdKey) {\n    const nextData = {\n        labels: [],\n        datasets: []\n    };\n    setLabels(nextData, data.labels);\n    setDatasets(nextData, data.datasets, datasetIdKey);\n    return nextData;\n}\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getDatasetAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event, \"dataset\", {\n        intersect: true\n    }, false);\n}\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getElementAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event, \"nearest\", {\n        intersect: true\n    }, false);\n}\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getElementsAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event, \"index\", {\n        intersect: true\n    }, false);\n}\n\nconst Chart = defineComponent({\n    props: Props,\n    setup (props, param) {\n        let { expose , slots  } = param;\n        const canvasRef = ref(null);\n        const chartRef = shallowRef(null);\n        expose({\n            chart: chartRef\n        });\n        const renderChart = ()=>{\n            if (!canvasRef.value) return;\n            const { type , data , options , plugins , datasetIdKey  } = props;\n            const clonedData = cloneData(data, datasetIdKey);\n            const proxiedData = cloneProxy(clonedData, data);\n            chartRef.value = new Chart$1(canvasRef.value, {\n                type,\n                data: proxiedData,\n                options: {\n                    ...options\n                },\n                plugins\n            });\n        };\n        const destroyChart = ()=>{\n            const chart = toRaw(chartRef.value);\n            if (chart) {\n                if (props.destroyDelay > 0) {\n                    setTimeout(()=>{\n                        chart.destroy();\n                        chartRef.value = null;\n                    }, props.destroyDelay);\n                } else {\n                    chart.destroy();\n                    chartRef.value = null;\n                }\n            }\n        };\n        const update = (chart)=>{\n            chart.update(props.updateMode);\n        };\n        onMounted(renderChart);\n        onUnmounted(destroyChart);\n        watch([\n            ()=>props.options,\n            ()=>props.data\n        ], (param, param1)=>{\n            let [nextOptionsProxy, nextDataProxy] = param, [prevOptionsProxy, prevDataProxy] = param1;\n            const chart = toRaw(chartRef.value);\n            if (!chart) {\n                return;\n            }\n            let shouldUpdate = false;\n            if (nextOptionsProxy) {\n                const nextOptions = toRawIfProxy(nextOptionsProxy);\n                const prevOptions = toRawIfProxy(prevOptionsProxy);\n                if (nextOptions && nextOptions !== prevOptions) {\n                    setOptions(chart, nextOptions);\n                    shouldUpdate = true;\n                }\n            }\n            if (nextDataProxy) {\n                const nextLabels = toRawIfProxy(nextDataProxy.labels);\n                const prevLabels = toRawIfProxy(prevDataProxy.labels);\n                const nextDatasets = toRawIfProxy(nextDataProxy.datasets);\n                const prevDatasets = toRawIfProxy(prevDataProxy.datasets);\n                if (nextLabels !== prevLabels) {\n                    setLabels(chart.config.data, nextLabels);\n                    shouldUpdate = true;\n                }\n                if (nextDatasets && nextDatasets !== prevDatasets) {\n                    setDatasets(chart.config.data, nextDatasets, props.datasetIdKey);\n                    shouldUpdate = true;\n                }\n            }\n            if (shouldUpdate) {\n                nextTick(()=>{\n                    update(chart);\n                });\n            }\n        }, {\n            deep: true\n        });\n        return ()=>{\n            return h(\"canvas\", {\n                role: \"img\",\n                ariaLabel: props.ariaLabel,\n                ariaDescribedby: props.ariaDescribedby,\n                ref: canvasRef\n            }, [\n                h(\"p\", {}, [\n                    slots.default ? slots.default() : \"\"\n                ])\n            ]);\n        };\n    }\n});\n\nfunction createTypedChart(type, registerables) {\n    Chart$1.register(registerables);\n    return defineComponent({\n        props: CommonProps,\n        setup (props, param) {\n            let { expose  } = param;\n            const ref = shallowRef(null);\n            const reforwardRef = (chartRef)=>{\n                ref.value = chartRef?.chart;\n            };\n            expose({\n                chart: ref\n            });\n            return ()=>{\n                return h(Chart, compatProps({\n                    ref: reforwardRef\n                }, {\n                    type,\n                    ...props\n                }));\n            };\n        }\n    });\n}\nconst Bar = /* #__PURE__ */ createTypedChart(\"bar\", BarController);\nconst Doughnut = /* #__PURE__ */ createTypedChart(\"doughnut\", DoughnutController);\nconst Line = /* #__PURE__ */ createTypedChart(\"line\", LineController);\nconst Pie = /* #__PURE__ */ createTypedChart(\"pie\", PieController);\nconst PolarArea = /* #__PURE__ */ createTypedChart(\"polarArea\", PolarAreaController);\nconst Radar = /* #__PURE__ */ createTypedChart(\"radar\", RadarController);\nconst Bubble = /* #__PURE__ */ createTypedChart(\"bubble\", BubbleController);\nconst Scatter = /* #__PURE__ */ createTypedChart(\"scatter\", ScatterController);\n\nexport { Bar, Bubble, Chart, Doughnut, Line, Pie, PolarArea, Radar, Scatter, createTypedChart, getDatasetAtEvent, getElementAtEvent, getElementsAtEvent };\n//# sourceMappingURL=index.js.map\n"],"names":["TutorialDataService","getAll","http","get","id","create","data","post","update","put","delete","deleteAll","backupHistory","historyFile","generalStatus","round","v","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","isShort","r","g","hexParse","str","ret","len","length","alpha","hexString","undefined","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","i","hueValue","rgb2hsl","range","calln","Array","isArray","map","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","m","exec","p1","p2","rotate","deg","hslString","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","unpack","unpacked","keys","Object","tkeys","j","ok","nk","replace","parseInt","names","nameParse","transparent","toLowerCase","RGB_RE","rgbParse","rgbString","to","pow","from","interpolate","rgb1","rgb2","t","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","charAt","Color","constructor","type","this","_rgb","_valid","valid","obj","mix","color","weight","c1","c2","w2","p","w1","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","noop","uid","isNullOrUndef","value","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","callback","fn","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","klen","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","_splitKey","parts","split","part","push","_getKeyResolver","resolveObjectKey","resolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","_isClickEvent","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","roundedRange","niceRange","floor","fraction","niceFraction","_factorize","result","sqrt","sort","pop","isNumber","isNaN","almostWhole","rounded","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","defineProperty","configurable","enumerable","forEach","method","base","res","object","unlistenArrayEvents","stub","splice","_arrayUnique","items","set","Set","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","check","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","applyAnimationsDefaults","defaults","duration","easing","loop","describe","_fallback","_indexable","_scriptable","name","properties","active","animation","resize","show","animations","visible","hide","applyLayoutsDefaults","autoPadding","padding","top","bottom","intlCache","Map","getNumberFormat","locale","cacheKey","JSON","stringify","formatter","Intl","NumberFormat","formatNumber","num","format","formatters","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","applyScaleDefaults","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","override","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","local","appliers","toFontString","_measureText","gc","longest","string","textWidth","measureText","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","save","resetTransform","clearRect","height","restore","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","setRenderOpts","opts","translation","fillStyle","textAlign","textBaseline","decorateText","line","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","resolve","inputs","info","cacheable","_addGrace","minmax","change","keepZero","add","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","cache","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","isScriptable","isIndexable","readKey","prefix","needsSubResolver","_resolveScriptable","_resolveArray","getValue","Error","join","createSubResolver","arr","filter","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","pointBefore","iPixel","vPixel","splineCurveMonotone","slopeDelta","capControlPoint","pt","capBezierPoints","inArea","inAreaPrev","inAreaNext","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","pos","useOffsetPos","shadowRoot","getCanvasPosition","touches","offsetX","offsetY","box","getBoundingClientRect","clientX","clientY","getRelativePosition","event","borderBox","boxSizing","paddings","borders","getContainerSize","maxHeight","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","maintainHeight","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRightToLeftAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","getSegment","segment","startBound","endBound","_boundSegment","prevValue","inside","subStart","startIsBefore","endIsBefore","shouldStart","shouldStop","_boundSegments","segments","sub","findStartAndEnd","solidSegments","cur","stop","_computeSegments","segmentOptions","_loop","splitByStyles","completeLoop","_fullLoop","doSplitByStyles","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","complete","progress","listen","cb","reduce","acc","_duration","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_target","_prop","_from","_to","_promises","elapsed","wait","promises","Promise","rej","resolved","Animations","config","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","anim","all","scaleClip","allowedOverflow","defaultClip","toClip","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","convertObjectDataToArray","vScale","iAxisKey","vAxisKey","adata","isStacked","stacked","getStackKey","indexScale","valueScale","NEGATIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iAxis","vAxis","itemStacks","_top","_bottom","visualValues","_visualValues","getFirstScaleId","shift","createDatasetContext","dataset","createDataContext","dataIndex","raw","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","static","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","parse","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","getRatioAndOffset","circumference","cutout","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","DoughnutController","animateRotate","animateScale","spacing","legend","generateLabels","fontColor","getDataVisibility","legendItem","toggleDataVisibility","super","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","LineController","_index_","_value_","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","getBasePixel","lastPoint","updateControlPoints","DateAdapterBase","members","init","formats","diff","startOf","endOf","adapters","_date","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","useFinalPosition","isPointInArea","evaluationFunc","inRange","getNearestRadialItems","getProps","getNearestCartesianItems","distanceMetric","minDistance","center","getCenterPoint","pointInArea","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","stackWeight","horizontal","isHorizontal","buildStacks","layouts","wrap","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","concat","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","getMargins","marginForPositions","fitBoxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","eventListenerOptions","addListener","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","entry","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","_tickSize","maxScale","_length","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","ceil","majorStart","majorEnd","reverseAlign","offsetFromEdge","edge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","_startPixel","_endPixel","lineValue","getPixelForTick","garbageCollect","caches","gcLen","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_cache","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","startPixel","endPixel","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","minSize","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","jlen","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","getValueForPixel","getPixelForDecimal","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","getLineWidthForValue","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","defaultRoutes","routeDefaults","routes","propertyParts","sourceName","sourceScope","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","getOpts","pluginOpts","pluginScopeKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","getAxisFromDataset","retrieveAxisFromDatasets","boundDs","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","needContext","subResolver","resolverCache","hasFunction","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","getSizeForArea","field","getDatasetArea","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","getVisibleDatasetCount","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","clipArc","pixelMargin","angleMargin","toRadiusCorners","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","circular","innerR","spacingOffset","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","inner","lineJoin","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","fix","radiusOffset","setStyle","lineCap","getLineMethod","stepped","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","_interpolate","interpolated","inRange$1","hitRadius","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","textDirection","realX","fontLineHeight","calculateLegendItemHeight","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","calculateItemWidth","calculateItemHeight","legendItemText","plugin_legend","_element","_args","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","plugin_title","WeakMap","positioners","average","xSet","xAverage","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","beforeTitle","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","addIfString","addedLabels","unshift","findOrAddLabel","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","timestamp","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","CommonProps","required","default","datasetIdKey","updateMode","A11yProps","ariaLabel","ariaDescribedby","Props","destroyDelay","compatProps","internals","attrs","toRawIfProxy","cloneProxy","src","setOptions","nextOptions","setLabels","currentData","nextLabels","setDatasets","nextDatasets","addedDatasets","nextDataset","currentDataset","find","cloneData","nextData","setup","param","expose","slots","canvasRef","chartRef","renderChart","clonedData","proxiedData","destroyChart","param1","nextOptionsProxy","nextDataProxy","prevOptionsProxy","prevDataProxy","shouldUpdate","prevOptions","prevLabels","prevDatasets","deep","role","ref","createTypedChart","registerables","reforwardRef","Doughnut","Line"],"sourceRoot":""}